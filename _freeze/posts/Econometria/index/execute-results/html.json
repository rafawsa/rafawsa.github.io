{
  "hash": "9910b22f18aa6dd1f47fe55c2a9d033b",
  "result": {
    "markdown": "---\ntitle: \"Alguns Exercícios de Econometria\"\nauthor: \"Rafael W S Abreu\"\ndate: \"2022-09-14\"\ncategories: [Econometrics, Stats, R]\nimage: \"thumbnail.jpg\"\n---\n\n\nVamos começar simples:\n\nSuponha uma loteria que tira 6 números aleatórios entre 1 e 60. Quais seriam os numeros ganhadores dessa semana?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\nsample(1:60, size=6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 31 15 51 14  3 42\n```\n:::\n:::\n\n\nVerifique se esta função é uma Função de densidade de probabilidade\n\n$$\nf(x) = \\frac{x}{4}  e^{-x²/8} , x\\ge 0\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n    f <- function(x){(x/4)*exp(-x^2/8)}\n\n    #a função integrate() faz a integral, para sabermos se a função é FDP ou não, sua integral entre 0 e +infinito tem que ser igual a 1\n    \n    integrate(f, 0, Inf)$value\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n:::\n\n\nConsiderando a equação da questão acima calcule o valor esperado e a variança de X.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n    fx <- function(x){x*f(x)}\n\n    exp_value <- integrate(fx, 0, Inf)$value\n\n    fx2 <-  function(x){x^2*f(x)}\n\n    var <- integrate(fx2, 0, Inf)$value - exp_value^2\n```\n:::\n\n\nExercícios sobre regressões lineares.\n\n1.1 carregar os pacotes \"AER\" e \"MASS\" e estimar um modelo simples de regressão linear que explique o valor médio das casas dos distritos (medv) pelo percentual de domicílios com baixo nível socioeconômico.\n\n\n\n\n\nSabendo que *lstat* mostra o percentual da população que é considerada de baixa renda e *medv* a mediana do valor das casas em \\$1000\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(Boston) #com essa função podemos ter uma vista geral da tabela sem precisar mostrar todas as observações\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 506\nColumns: 14\n$ crim    <dbl> 0.00632, 0.02731, 0.02729, 0.03237, 0.06905, 0.02985, 0.08829,…\n$ zn      <dbl> 18.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5, 12.5, 12.5, 12.5, 12.5, 1…\n$ indus   <dbl> 2.31, 7.07, 7.07, 2.18, 2.18, 2.18, 7.87, 7.87, 7.87, 7.87, 7.…\n$ chas    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ nox     <dbl> 0.538, 0.469, 0.469, 0.458, 0.458, 0.458, 0.524, 0.524, 0.524,…\n$ rm      <dbl> 6.575, 6.421, 7.185, 6.998, 7.147, 6.430, 6.012, 6.172, 5.631,…\n$ age     <dbl> 65.2, 78.9, 61.1, 45.8, 54.2, 58.7, 66.6, 96.1, 100.0, 85.9, 9…\n$ dis     <dbl> 4.0900, 4.9671, 4.9671, 6.0622, 6.0622, 6.0622, 5.5605, 5.9505…\n$ rad     <int> 1, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4,…\n$ tax     <dbl> 296, 242, 242, 222, 222, 222, 311, 311, 311, 311, 311, 311, 31…\n$ ptratio <dbl> 15.3, 17.8, 17.8, 18.7, 18.7, 18.7, 15.2, 15.2, 15.2, 15.2, 15…\n$ black   <dbl> 396.90, 396.90, 392.83, 394.63, 396.90, 394.12, 395.60, 396.90…\n$ lstat   <dbl> 4.98, 9.14, 4.03, 2.94, 5.33, 5.21, 12.43, 19.15, 29.93, 17.10…\n$ medv    <dbl> 24.0, 21.6, 34.7, 33.4, 36.2, 28.7, 22.9, 27.1, 16.5, 18.9, 15…\n```\n:::\n\n```{.r .cell-code}\nsummary(Boston) #com essa função podemos ver a media, mediana e os quartis de cada variavel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      crim                zn             indus            chas        \n Min.   : 0.00632   Min.   :  0.00   Min.   : 0.46   Min.   :0.00000  \n 1st Qu.: 0.08205   1st Qu.:  0.00   1st Qu.: 5.19   1st Qu.:0.00000  \n Median : 0.25651   Median :  0.00   Median : 9.69   Median :0.00000  \n Mean   : 3.61352   Mean   : 11.36   Mean   :11.14   Mean   :0.06917  \n 3rd Qu.: 3.67708   3rd Qu.: 12.50   3rd Qu.:18.10   3rd Qu.:0.00000  \n Max.   :88.97620   Max.   :100.00   Max.   :27.74   Max.   :1.00000  \n      nox               rm             age              dis        \n Min.   :0.3850   Min.   :3.561   Min.   :  2.90   Min.   : 1.130  \n 1st Qu.:0.4490   1st Qu.:5.886   1st Qu.: 45.02   1st Qu.: 2.100  \n Median :0.5380   Median :6.208   Median : 77.50   Median : 3.207  \n Mean   :0.5547   Mean   :6.285   Mean   : 68.57   Mean   : 3.795  \n 3rd Qu.:0.6240   3rd Qu.:6.623   3rd Qu.: 94.08   3rd Qu.: 5.188  \n Max.   :0.8710   Max.   :8.780   Max.   :100.00   Max.   :12.127  \n      rad              tax           ptratio          black       \n Min.   : 1.000   Min.   :187.0   Min.   :12.60   Min.   :  0.32  \n 1st Qu.: 4.000   1st Qu.:279.0   1st Qu.:17.40   1st Qu.:375.38  \n Median : 5.000   Median :330.0   Median :19.05   Median :391.44  \n Mean   : 9.549   Mean   :408.2   Mean   :18.46   Mean   :356.67  \n 3rd Qu.:24.000   3rd Qu.:666.0   3rd Qu.:20.20   3rd Qu.:396.23  \n Max.   :24.000   Max.   :711.0   Max.   :22.00   Max.   :396.90  \n     lstat            medv      \n Min.   : 1.73   Min.   : 5.00  \n 1st Qu.: 6.95   1st Qu.:17.02  \n Median :11.36   Median :21.20  \n Mean   :12.65   Mean   :22.53  \n 3rd Qu.:16.95   3rd Qu.:25.00  \n Max.   :37.97   Max.   :50.00  \n```\n:::\n\n```{.r .cell-code}\nbh_mod <- lm(medv ~lstat, data = Boston) #aqui fazemos o modelo de regressão linear\nbh_mod\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ lstat, data = Boston)\n\nCoefficients:\n(Intercept)        lstat  \n      34.55        -0.95  \n```\n:::\n\n```{.r .cell-code}\nr_reg <- summary(bh_mod)$r.squared\nr_reg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5441463\n```\n:::\n:::\n\n\nPodemos ver que conforme vai aumentando a o percentual da população de baixa renda, vai diminuindo o valor dos imóveis. Isso é devido ao valor do coeficiente *lstat* negativo.\n\nContinuando com o modelo, podemos acrescentar mais variáveis à regressão.\n\n$$\nmedv_{i} = \\beta_{0} + \\beta_{1}lstat_{i} + \\beta_{2}age_{i}+ \\beta_{3}crim_{i}+u_{i}\n$$\n\nSendo:\n\n*medv* a mediana do valor dos imóveis em cada distrito\n\n*lstat* o percentual de indivíduos com baixo status socioeconômico\n\n*age* a média de idade de cada imóvel\n\n*crim* a taxa percapita de crimes por distrito\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod <- lm(medv ~ lstat + crim + age, data = Boston)\nmod\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ lstat + crim + age, data = Boston)\n\nCoefficients:\n(Intercept)        lstat         crim          age  \n   32.82804     -0.99409     -0.08262      0.03765  \n```\n:::\n\n```{.r .cell-code}\ncoeftest(mod, vcov. = vcovHC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nt test of coefficients:\n\n             Estimate Std. Error  t value Pr(>|t|)    \n(Intercept) 32.828045   0.751505  43.6831  < 2e-16 ***\nlstat       -0.994091   0.083058 -11.9686  < 2e-16 ***\ncrim        -0.082622   0.029733  -2.7788  0.00566 ** \nage          0.037647   0.016930   2.2236  0.02662 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nR2_unreg <- summary(mod)$r.squared\nR2_unreg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5559429\n```\n:::\n:::\n\n\nPodemos ver que o R² das duas regressões não varia muito. Mas, mesmo assim, a regressão com mais regressores tem um R² um pouquinho maior.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}