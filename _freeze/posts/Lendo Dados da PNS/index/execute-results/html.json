{
  "hash": "0556cbbace484d28cb0053c8ebda31bf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lendo dados da PNS\"\nauthor: \"Rafael W S Abreu\"\ndate: \"2024-06-19\"\ncategories: [TCC, R, Stats, Econometrics]\neditor_options: \n  chunk_output_type: console\n---\n\n\nSegue algumas dicas para a leitura de dados da PNS\n\n## Pacotes\n\nEsse Chunk contém todas as bibliotecas usadas no decorrer de todo o trabalho.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # utilizar a sintaxe tidyverse com o R\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(survey)    # análise de pesquisas complexas\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: grid\nCarregando pacotes exigidos: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nCarregando pacotes exigidos: survival\n\nAttaching package: 'survey'\n\nThe following object is masked from 'package:graphics':\n\n    dotchart\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(srvyr)     # provê notação tidyverse para o pacote survey \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'srvyr'\n\nThe following object is masked from 'package:stats':\n\n    filter\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(PNSIBGE)   # acesso aos dados da PNS\nlibrary(broom)     # sumariza as informações dos modelos em formato tidy\nlibrary(gt)        # tabelas\nlibrary(gtExtras)  # formatação de tabelas\n```\n:::\n\n\n## Carga de Dados da PNS\n\nPara acessar os dados da PNS usaremos as funções do pacote PNSIBGE [@assuncao_pnsibge_2020]:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Subgrupo de variáveis desejado:\nvariaveis_pns_2013 = c(\"C006\",  # sexo\n                       \"C008\",  # idade\n                       \"J007\",  # possui DCNT\n                       \"J014\",  # Usou serviço saúde nas últimas 2 semanas\n                       \"J037\",  # Internação nos últimos 12 meses\n                       \"J002\",  # Deixou de realizar atividades nas 2 últimas semanas por motivo de saúde\n                       \"J011\"  # Consulta médica nos últimos 12 meses\n                       )\n\nvariaveis_pns_2019 = c(\"C006\",  # sexo\n                       \"C008\",  # idade\n                       \"J007\",  # possui DCNT\n                       \"J014\",  # Usou serviço saúde nas últimas 2 semanas\n                       \"J037\",  # Internação nos últimos 12 meses\n                       \"J002\",  # Deixou de realizar atividades nas 2 últimas semanas por motivo de saúde\n                       \"J01101\"  # Consulta médica nos últimos 12 meses\n                       )\n\n# lendo os dados da PNS 2013 \npns13 <-\n  get_pns(\n    year = 2013,\n    selected = FALSE,\n    anthropometry = FALSE,\n    vars = variaveis_pns_2013,\n    labels = TRUE,\n    design = TRUE)\n\n# Vamos utilizar a versão sem pesos dos dados para obter informações sobre __labels__ e __levels__.\ndf_pns13 <-\n  get_pns(\n    year = 2013,\n    selected = FALSE,\n    anthropometry = FALSE,\n    vars = variaveis_pns_2013,\n    labels = TRUE,\n    design = FALSE)\n\n# Vamos trabalhar com o pacote srvyr e não com o survey,\n# por isso precisamos transformar survey.design2 em tbl.svy\np13 <- srvyr::as_survey(pns13)\n\n## Ajuste dos dados para aplicar regressão de Poisson\n## A regressão de Poisson requer que a variável objetivo seja numérica. \n## Neste caso vamos ajustar as variáveis categóricas para valores 0 ou 1.\nlevels(df_pns13$J007)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Sim\" \"Não\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(df_pns13$J014)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Sim\" \"Não\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(df_pns13$J037)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Sim\" \"Não\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(df_pns13$J002)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Sim\" \"Não\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(df_pns13$J011)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Nos doze últimos meses\"      \"De 1 ano a menos de 2 anos\" \n[3] \"De 2 anos a menos de 3 anos\" \"3 anos ou mais\"             \n[5] \"Nunca foi ao médico\"        \n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(df_pns13$C006)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Masculino\" \"Feminino\" \n```\n\n\n:::\n\n```{.r .cell-code}\n# Vamos mudar o formato que a variável é apresentada para, no futuro, podermos realizar uma regressão de Poisson\np13 <- \n  p13 |> \n  mutate(iJ014 = if_else(J014 == \"Não\", 0, 1),\n         iJ037 = if_else(J037 == \"Não\", 0, 1),\n         iJ002 = if_else(J002 == \"Não\", 0, 1),\n         cJ011 = if_else(J011 == \"Nos doze últimos meses\", \"Sim\", \"Não\"),\n         iJ011 = if_else(J011 == \"Nos doze últimos meses\", 1, 0)) |> \n  mutate(J007 = relevel(J007, ref = \"Não\"))\n```\n:::\n\n\nNo final o objeto \"p13\" esta pronto para começarmos a análise\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}